# ==============================================================
# = Banco de Dados
# ==============================================================
spring.datasource.url=jdbc:mysql://localhost:3306/lojafilmes?useTimezone=true&serverTimezone=America/Sao_Paulo
spring.datasource.username= root
spring.datasource.password= 180385
#spring.datasource.password= 1885

#TESTE
spring.main.allow-bean-definition-overriding=true

#JPA
spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql= true
spring.jpa.open-in-view= true

# THYMELEAF
spring.thymeleaf.cache= false

#Ports de acesso
#server.port=9000
server.port=8080

#API Link
#http://www.omdbapi.com/?i=tt3896198&apikey=35c8b8b8

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always